<?php
/**
 * Coyote Image Descriptions Coyote Filters.
 *
 * @since   0.1.0
 * @package Coyote_Image_Descriptions
 */

/**
 * Coyote Image Descriptions Coyote Filters.
 *
 * @since 0.1.0
 */
class CID_Coyote_Filters {
	/**
	 * Parent plugin class.
	 *
	 * @since 0.1.0
	 *
	 * @var   Coyote_Image_Descriptions
	 */
	protected $plugin = null;

	/**
	 * Constructor.
	 *
	 * @since  0.1.0
	 *
	 * @param  Coyote_Image_Descriptions $plugin Main plugin object.
	 */
	public function __construct( $plugin ) {
		$this->plugin = $plugin;
		$this->hooks();
	}

	/**
	 * Initiate our hooks.
	 *
	 * @since  0.1.0
	 */
	public function hooks() {
		add_filter( 'coyote_image_tag', array( $this, 'image_tag' ), 10, 2 );
		add_filter( 'wp_get_attachment_image_attributes', array( $this, 'add_image_id_to_html' ), 10, 3 );
	}

	/**
	 * Add an attribute with the image ID to image tags generated by WordPress
	 *
	 * @since  0.1.0
	 *
	 * @param array        $attr       Attributes for the image markup.
	 * @param WP_Post      $attachment Image attachment post.
	 * @param string|array $size       Requested size.
	 * @return array
	 */
	public function add_image_id_to_html( $attr, $attachment, $size ) {
		$attr['data-image-id'] = $attachment->ID;
		return $attr;
	}

	/**
	 * Filter an HTML Image Tag with the corresponding Coyote description
	 *
	 * @since  0.1.0
	 *
	 * @param string $image_tag An HTML image tag.
	 * @param string $context   The Coyote context.
	 * @return string
	 */
	public function image_tag( $image_tag, $context ) {
		$doc = new DOMDocument();
		$doc->loadHTML( $image_tag );
		$image_tags = $doc->getElementsByTagName( 'img' );
		$image_id = $this->extract_image_id( $image_tag );

		foreach ( $image_tags as $tag ) {
			// If we couldn't get the ID already, try to get it from the custom attribute we inserted.
			if ( ! $image_id ) {
				$image_id = (int) $tag->getAttribute( 'data-image-id' );
			}
			$image = $image_id ? get_post( $image_id ) : false;
			if ( $image ) {
				$description = $this->plugin->get_image_description_from_context( $image, $context );
				$tag->setAttribute( 'alt', $description );
				$image_tag = $doc->saveHtml( $tag );
				break;
			}
		}

		return $image_tag;
	}

	/**
	 * Try to get the image ID from an image tag generated by WordPress
	 *
	 * @since  0.1.0
	 *
	 * @param string $tag An HTML image tag.
	 * @return int
	 */
	protected function extract_image_id( $tag ) {
		$regex = '/wp-image-([\d]+)/';
		preg_match( $regex, $tag, $matches );

		return empty( $matches ) ? 0 : $matches[1];
	}
}
